{"name":"Opensensorsearch","tagline":"Open Sensor Search is a platform for sensor discovery across all sensor web supporting major specifications (OGC SWE) and popular IoT websites (Xively, Thingspeak, ...).","body":"### Welcome to OpenSensorSearch.\r\nOpen Sensor Search is a platform for sensor discovery across all sensor web supporting major specifications (OGC SWE) and popular IoT websites (Xively, Thingspeak, ...) , The UI interface allows you to harvest and schedule harvest tasks for a remote server ( harvest callback ) or a javascript file you develop.\r\n\r\n### Server developer\r\n* Choose the 'Harvest a remote server' tab , enter the url and click add server. , your ``` auth_token ``` by which you can refer to the server later\r\n* Your server needs to include the following routes\r\n\r\n```\r\n. GET /sensors\r\n. GET /sensors/:id\r\n```\r\n\r\n``` GET /sensors/ ``` implement the method that retrieve all of the sensors in a json list\r\n``` GET /sensors/:id ``` return the method that retrieves a sensor identified with an identifier.\r\n\r\n* If you click on schedule harvest you can use the ``` auth_token ``` and the data to harvest a remote server.\r\n\r\n### Javascript developers\r\n* Clicking on the tab of the \"Harvest a javascript script\" allows you to upload a file containing a javascript , be careful that you need to supply your license with the code.\r\n* After uploading the process returns a script id which you can use later for schedule.\r\n* We provide here a few harvesting Javascript scripts.\r\n\r\n1. A simple harvest script for basic utility.\r\n```\r\nfunction insert() {\r\n\tdao = new org.n52.sir.ds.solr.SOLRSearchSensorDAO();\r\n\tsensor = new org.n52.sir.datastructure.SirSensor();\r\n\tkeywords = new java.util.ArrayList();\r\n\tkeywords.add(\"javascript\");\r\n\tkeywords.add(\"harvest\");\r\n\tsensor.setKeywords(keywords);\r\n\t// set contacts\r\n\tcontacts = new java.util.ArrayList();\r\n\tcontacts.add(\"rhino\");\r\n\tcontacts.add(\"52north\");\r\n\tsensor.setContacts(contacts);\r\n\t// add location\r\n\tsensor.setLongitude(\"1.5\");\r\n\tsensor.setLatitude(\"3\");\r\n\r\n\tinsert = new org.n52.sir.ds.solr.SOLRInsertSensorInfoDAO();\r\n\treturn insert.insertSensor(sensor);\r\n}\r\ninsert();\r\n```\r\n2. A harvest script for a smart citizen feed.\r\n```\r\nfunction harvestSmartCitizenChannel(id){\r\n\tvar req = new org.n52.sir.script.HTTPRequest();\r\n\tvar query = \"http://api.smartcitizen.me/v0.0.1/\"+id+\"/lastpost.json\";\r\n\tvar respStr = req.doGet(query);\r\n\tif(respStr){\r\n\t\tvar obj = JSON.parse(respStr);\r\n\t\tif(obj){\r\n\t\t\tif(obj['devices']){\r\n\t\t\t\tvar devices = obj['devices'];\r\n\t\t\t\tvar count = 0;\r\n\t\t\t\tvar ids = [];\r\n\t\t\t\tfor(var i=0;i<devices.length;i++){\r\n\t\t\t\t\tvar channel = devices[i]\r\n\t\t\t\t\tvar description = channel['description'];\r\n\t\t\t\t\tvar id = channel['id'];\r\n\t\t\t\t\tvar latitude = channel['geo_lat'];\r\n\t\t\t\t\tvar longitude = channel['geo_long'];\r\n\t\t\t\t\t\r\n\t\t\t\t\t// TODO add an interface that hides the DAO\r\n\t\t\t\t\t// oss = new org.n52.sir.script.Sensors();\r\n\t\t\t\t\t// var keywords = [\"keyword\", \"keyword1\"];\r\n\t\t\t\t\t// oss.insertSensor(id, description, latitude, longitude, keywords, ...);\r\n\t\t\t\t\t\r\n\t\t\t\t\t// alternative:\r\n\t\t\t\t\t// Sensor newSensor = new org.n52.sir.script.Sensor();\r\n\t\t\t\t\t// newSensor.set(...);\r\n\t\t\t\t\t\r\n\t\t\t\t\tdao = new org.n52.sir.ds.solr.SOLRSearchSensorDAO();\r\n\t\t\t\t\tsensor = new org.n52.sir.datastructure.SirSensor();\r\n\t\t\t\t\tsensor.setDescription(description);\r\n\t\t\t\t\tsensor.setLongitude(longitude);\r\n\t\t\t\t\tsensor.setLatitude(latitude);\r\n\t\t\t\t\tinsert = new org.n52.sir.ds.solr.SOLRInsertSensorInfoDAO();\r\n\t\t\t\t\tinsert.insertSensor(sensor);\r\n\t\t\t\t\tcount++ ;\r\n\t\t\t\t}\r\n\t\t\t\treturn count;\r\n\t\t\t\t\r\n\t\t\t}else return -1;\r\n\t\t}else return -1;\r\n\t}else return -1;\r\n}\r\nharvestSmartCitizenChannel(\"feed_id_goes_here\");\r\n```\r\n\r\n### License of agreement\r\n```\r\n/**\r\n * ﻿Copyright (C) 2012 52°North Initiative for Geospatial Open Source Software GmbH\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n */\r\n```\r\n### Contact\r\n@Moh-Yakoub","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}